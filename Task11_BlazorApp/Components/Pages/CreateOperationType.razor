@using Services
@using Task11_Common.ViewModels

@page "/operationtypes/create/"

@inject IOperationTypeService OperationTypeService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<MudText Typo="Typo.h4" Style="margin-bottom: 20px; margin-top: 20px;">Create Operation Type</MudText>

@if (string.IsNullOrEmpty(_errorMessage))
{
    <EditForm Model="@operationType" OnValidSubmit="AddOperationType">
        <DataAnnotationsValidator />
        <ValidationSummary />
         <MudGrid>
            <MudItem xs="1" Style="display: flex; align-items: center">
                <MudText>
                    Name:
                </MudText>
            </MudItem>
            <MudItem xs="2">
                    <MudTextField @bind-Value="@operationType.Name" Label="Enter a name" Required="true" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
        </MudGrid>

        <MudGrid>
            <MudItem xs="1" Style="display: flex; align-items: center">
                <MudText>
                    Income/Expense:
                </MudText>
            </MudItem>
            <MudItem xs="2">
                <MudSelect T="bool" @bind-Value="operationType.IsIncome" Placeholder="Please Select" Margin="Margin.Dense" Label="Select Type" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                    <MudSelectItem Value="true">Income</MudSelectItem>
                    <MudSelectItem Value="false">Expense</MudSelectItem>
                </MudSelect>
            </MudItem>
        </MudGrid>

        <p>Selected Value: @operationType.IsIncome</p>
        
        <MudGrid>
            <MudItem xs="1" Style="display: flex; align-items: center">
                <MudText>
                    Description:
                </MudText>
            </MudItem>
            <MudItem xs="4">
                <MudTextField @bind-Value="@operationType.Description" Label="Enter a description" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
            </MudItem>
        </MudGrid>

        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary" Style="margin-top: 30px;">Create</MudButton>
        <MudButton Variant="Variant.Outlined" Color="Color.Secondary" Style="margin-top: 30px;" OnClick="Cancel">Cancel</MudButton>
    </EditForm>   
}

@code {
    private string _errorMessage;
    private string _resultMessage;
    private OperationTypeViewModelCommon operationType = new OperationTypeViewModelCommon();

    public string IsIncomeValue
    {
        get => operationType.IsIncome.ToString();
        set => operationType.IsIncome = bool.Parse(value);
    }

    private async Task AddOperationType()
    {
        try
        {
            _resultMessage = await OperationTypeService.CreateOperationType(operationType);
            NavigationManager.NavigateTo($"/operationtypes?message={_resultMessage}");
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
        }
        
    }

    private void HandleChange(ChangeEventArgs e)
    {
        if (e.Value.ToString() == "true")
        {
            operationType.IsIncome = true;
        }
        else
        {
            operationType.IsIncome = false;
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/operationtypes");
    }
}
